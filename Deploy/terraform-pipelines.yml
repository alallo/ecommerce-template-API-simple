parameters:
  environment: 'dev1'
  terraformVersion: 0.13.3
  vmImageName: 'ubuntu-latest'

- job: Deploy to Azure
  pool:
    vmImage: $(parameters.vmImageName)
  variables:
   - group: "dev-ecommerce"

  steps:
  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in **/*.tfvars'
    inputs:
      targetFiles: '**/*.tfvars'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform ${{ parameters.terraformVersion }}'
    inputs:
      terraformVersion: ${{ parameters.terraformVersion }}

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform - azurerm init'
    inputs:
      backendServiceArm: $(subscriptionName)
      backendAzureRmResourceGroupName: $(resourceGroupName)
      backendAzureRmStorageAccountName: $(storageAccountName)
      backendAzureRmContainerName: $(containerName)
      backendAzureRmKey: $(tfstateKey)


  - task: AzureCLI@2
    displayName: 'Terraform - azurerm apply'
    inputs:
      azureSubscription: $(subscriptionName)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $env:ARM_CLIENT_ID = $(client_id)"
        $env:ARM_CLIENT_SECRET = "$(client_secret)"
        $env:ARM_SUBSCRIPTION_ID = "$(subscription_id)"
        $env:ARM_TENANT_ID = "$(tenant_id)"
        terraform apply -auto-approve -var-file="terraform.tfvars"
        useGlobalConfig: true